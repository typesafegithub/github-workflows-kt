# This file was generated using Kotlin DSL (.github/workflows/release.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'Release'
on:
  push:
    tags:
    - 'v*.*.*'
env:
  SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'
  SIGNING_PASSWORD: '${{ secrets.SIGNING_PASSWORD }}'
  ORG_GRADLE_PROJECT_sonatypeUsername: '${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}'
  ORG_GRADLE_PROJECT_sonatypePassword: '${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}'
jobs:
  check_yaml_consistency:
    name: 'Check YAML consistency'
    runs-on: 'ubuntu-latest'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v4'
    - id: 'step-1'
      name: 'Execute script'
      continue-on-error: true
      run: 'rm ''.github/workflows/release.yaml'' && ''.github/workflows/release.main.kts'''
    - id: 'step-2'
      name: '[Fallback] Start the local server'
      run: 'docker run -p 8080:8080 krzema12/github-workflows-kt-jit-binding-server &'
      if: '${{ steps.step-1.outcome != ''success'' }}'
    - id: 'step-3'
      name: '[Fallback] Wait for the server'
      run: 'curl --head -X GET --retry 60 --retry-all-errors --retry-delay 1 http://localhost:8080/status'
      if: '${{ steps.step-1.outcome != ''success'' }}'
    - id: 'step-4'
      name: '[Fallback] Replace server URL in script'
      run: 'sed -i -e ''s/https:\/\/bindings.krzeminski.it/http:\/\/localhost:8080/g'' .github/workflows/release.main.kts'
      if: '${{ steps.step-1.outcome != ''success'' }}'
    - id: 'step-5'
      name: '[Fallback] Execute script again'
      run: 'rm -f ''.github/workflows/release.yaml'' && ''.github/workflows/release.main.kts'''
      if: '${{ steps.step-1.outcome != ''success'' }}'
    - id: 'step-6'
      name: 'Consistency check'
      run: 'git diff --exit-code ''.github/workflows/release.yaml'''
  release:
    runs-on: 'ubuntu-latest'
    needs:
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      uses: 'actions/checkout@v4'
    - id: 'step-1'
      name: 'Set up JDK'
      uses: 'actions/setup-java@v4'
      with:
        java-version: '11'
        distribution: 'zulu'
    - id: 'step-2'
      uses: 'gradle/actions/setup-gradle@v4'
    - id: 'step-3'
      name: 'Build'
      run: './gradlew build'
    - id: 'step-4'
      uses: 'actions/setup-python@v5'
      with:
        python-version: '3.13'
    - id: 'step-5'
      name: 'Publish '':shared-internal'' to Sonatype'
      run: './gradlew :shared-internal:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-configuration-cache'
    - id: 'step-6'
      name: 'Publish '':github-workflows-kt'' to Sonatype'
      run: './gradlew :github-workflows-kt:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-configuration-cache'
    - id: 'step-7'
      name: 'Publish '':action-binding-generator'' to Sonatype'
      run: './gradlew :action-binding-generator:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-configuration-cache'
    - id: 'step-8'
      name: 'Publish '':action-updates-checker'' to Sonatype'
      run: './gradlew :action-updates-checker:publishToSonatype closeAndReleaseSonatypeStagingRepository --no-configuration-cache'
    - id: 'step-9'
      name: 'Wait until '':shared-internal'' present in Maven Central'
      run: './gradlew :shared-internal:waitUntilLibraryPresentInMavenCentral'
    - id: 'step-10'
      name: 'Wait until '':github-workflows-kt'' present in Maven Central'
      run: './gradlew :github-workflows-kt:waitUntilLibraryPresentInMavenCentral'
    - id: 'step-11'
      name: 'Wait until '':action-binding-generator'' present in Maven Central'
      run: './gradlew :action-binding-generator:waitUntilLibraryPresentInMavenCentral'
    - id: 'step-12'
      name: 'Wait until '':action-updates-checker'' present in Maven Central'
      run: './gradlew :action-updates-checker:waitUntilLibraryPresentInMavenCentral'
    - id: 'step-13'
      run: 'pip install -r docs/requirements.txt'
    - id: 'step-14'
      name: 'Build Mkdocs docs'
      run: 'mkdocs build --site-dir to-gh-pages'
    - id: 'step-15'
      uses: 'gradle/actions/setup-gradle@v4'
    - id: 'step-16'
      name: 'Generate API docs'
      run: './gradlew :github-workflows-kt:dokkaGenerate --no-configuration-cache'
    - id: 'step-17'
      name: 'Prepare target directory for API docs'
      run: 'mkdir -p to-gh-pages/api-docs'
    - id: 'step-18'
      name: 'Copy Dokka output to Mkdocs output'
      run: 'cp -r github-workflows-kt/build/dokka/html/* to-gh-pages/api-docs'
    - id: 'step-19'
      name: 'Copy teaser image'
      run: 'cp images/teaser-with-newest-version.svg to-gh-pages'
    - id: 'step-20'
      name: 'Deploy merged docs to GitHub Pages'
      uses: 'JamesIves/github-pages-deploy-action@v4'
      with:
        folder: 'to-gh-pages'
